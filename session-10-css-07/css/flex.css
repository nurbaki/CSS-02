


.container1{
    /* background-color: bisque;
    display: flex;
    justify-content: center; */
    /* justify-content: flex-end;
    justify-content: flex-start; */
    /* justify-content: space-between; */
    /* justify-content: space-around;*/
    /* justify-content: space-evenly; 
    flex-wrap: wrap; */
    background-color: antiquewhite;
  display: flex;
  /*! Elemanların diziliş yönü : column=altalta block gibi, row =yanyana inline gibi, row-reverse= satırı sondan ve tersten yaz, column-reverse*/
  /* flex-direction: row; */

  /*? nowrap=sıkıştırma veya wrap=alt satıra geçebilme:flex-wrap: wrap, nowrap, wrap-reverse*/
  flex-wrap: wrap;

  /*! Yatay Hizalama: Justify-center
  /**  /** flex-start: Nesneler kapsayıcının başından başlayarak dizilirler.*/
  /**space-around: Nesneler arasında eşit boşluklar bırakılır.
  /**space-between: İlk nesne başta, son nesne sonda olacak şekilde nesneler eşit olarak kapsayıcının içerisinde dizilirler.
  /**center: Nesneler tam ortalı olacak şekilde hizalanır.
  /**flex-end: Son nesne en sağa yaslanacak şekilde hizalanır. */
  justify-content: space-around;
}
.container1 div{
    background-color: red;
    width: 5rem;
    height: 5rem;
    margin: 1rem;
}

/* .container2
    background-color: aquamarine;
    height: 20rem;
    display: flex;
    justify-content: flex-end;
    /* align-items: flex-end;
    align-items: stretch;
    align-items: center; */

/*.container2 div{
    background-color: cornflowerblue;
    width: 5rem;
    margin: 1rem;
*/
/* ------------------------------ */
.container2{
    background-color:pink;
    height:20rem;
   display:flex;
   justify-content:flex-end;
   /* child ların içindeki yazıları hizayı bozana göre (padding alana göre) hizala */
   align-items:baseline;
   /* align-items:center; */
   }
   
   .container2 div{
   
    background-color:cornflowerblue;
    width:5rem;
    margin:1rem;
   height:10rem;
   
   /* sayılar kıpırdasın */
    display:flex;
    justify-content:center;
    
   }
   .container2 div:nth-child(1){
    height:5rem;
    
   }
   .container2 div:nth-child(2){
    height:7rem;
    padding-top:2rem;
   }
   .container2 div:nth-child(3){
    height:2rem;
   padding:0.5rem;
   }

   /*! Dikey Hizalama => align-items
  /**flex-start: Nesneler, kapsayıcının en üstünden başlayarak dizilirler.
/**flex-end: Nesneler, kapsayıcının en altından başlayarak, yukarı doğru dizilirler.
/**center: Nesneler ortalı bir şekilde dikey olarak sıralanırlar.
/**baseline: İlk satırdaki yazı tipi göz önüne alınarak hizalanmaya başlanılır.
/**stretch: Tüm nesneler kapsayıcı yüksekliğine eşit olacak şekilde dizilirler.
  

/** bir child element stretch ile container'ın sınırlarına dayandığında child'in içerisindeki içeriği (Örn yazı) yine dikey olarak ortaya hizalamak için nested flex yapısı kullanılabilir*/

ul{
    background-color: darkgrey;
    list-style-type: none;
    height: 30rem;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    /* align-items: flex-end; */
    align-content: flex-start;
     /*!Çok satırlı verilerin dikeyde hizalanması için kullanılır.bütün elemanlar yukarı çıkıyorlar*/
     gap: 6rem 2rem;
     /*?gap, flex içerisindeki elemanların dikey ve yatay boşluklarını belirlemek için kullanılabilir. ilk yazılan yatay (satırlar arası yukarı aşağı) boşluk, 2. yazılan ise dikey (sutunlar arası, sağ sol) boşluktur */

}
ul li{
    background-color: violet;
    width: 4rem;
    height: 4rem;
    display: flex;
    justify-content: center;
    align-items: center;
}

.container4{
    background-color: red;
    display: flex;  
}
.container4 div{
    background-color: gray;
    width: 5rem;
    margin: 1rem;
    flex-grow: 1;
}
/* .grow1, .grow2, .grow3, .grow4
    flex-grow: 1;
  */

div.grow2{
    flex-grow: 2;
}
div.grow3{
    flex-grow: 4;
}
div.grow4{
    flex-grow: 0;
}

.container4 div{
    background-color:yellow;
    width:5rem;
    margin:1rem ;
    /* flex-grow: 1; */
    /* child larına büyüme izni ver */
   
}
div.grow1{
    /* diğer childlardan 1 kat büyüsün */
    flex: grow 1;;
   }
   div.grow2{
    /* diğer childlardan 2 kat büyüsün */
    flex-grow:2;
   }
   
   div.grow3{
    /* diğer child lardan 3 kat büyüsün */
    flex-grow: 3;
   }
   div.grow4{
    /* bu child parent ının verdiği büyüme iznini iptal etsin */
    flex-grow: 0;
   }